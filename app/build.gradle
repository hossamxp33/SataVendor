plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'com.github.triplet.play'


}

apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.github.triplet.play'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdk 31
    signingConfigs {
        signingConfigs {
            release {
                // You need to specify either an absolute path or include the
                // keystore file in the same directory as the build.gradle file.
                storeFile = file("satavendorkey.jks")
                storePassword = "123456"
                keyAlias = "key0"
                keyPassword = "123456"
            }
        }
    }
    defaultConfig {
        applicationId "com.codesroots.satavendor"
        minSdk 23
        targetSdk 30
        versionCode 6
        versionName "5.1"
        testInstrumentationRunner "com.codesroots.satavendor.CustomTestRunner"
        vectorDrawables.useSupportLibrary = true


    }
    configurations {
        cleanedAnnotations
        compile.exclude group: 'org.jetbrains' , module:'annotations'
    }
    testOptions.unitTests {
        includeAndroidResources = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }
    dataBinding {
        enabled = true
        enabledForTests = true

    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
        }
    }
    play {

        track.set("production") // internal / alpha / beta / production

        updatePriority.set(5) // Between 0 and 5

        serviceAccountCredentials.set(file("key.json"))

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs = ["-Xallow-result-return-type"]

    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8

        kotlinOptions {
            jvmTarget = '1.8'

            freeCompilerArgs = ["-Xallow-result-return-type"]

        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.test:runner:1.4.0'



    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:30.0.0'

    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'

    // ViewModel and LiveData
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    // alternatively, just ViewModel
    implementation 'android.arch.lifecycle:viewmodel:1.1.1'
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.6'

//    implementation project(path: ':cores')
    // alternatively, just LiveData
    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"

    // alternatively, just LiveData
    implementation 'android.arch.lifecycle:livedata:1.1.1'
    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"
    implementation "io.reactivex.rxjava2:rxjava:2+"
    implementation 'io.reactivex.rxjava2:rxandroid:2+'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2+'

    implementation 'com.github.dhaval2404:imagepicker:2.1'

    implementation "androidx.activity:activity:$activityVersion"

    implementation "androidx.activity:activity-ktx:$activityVersion"
    //You must use fragment 1.3.0-alpha02 or later

    implementation "androidx.fragment:fragment:$fragmentVersion"

    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    // Sample usage: "by viewModels (fragment)" etc.
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"
    // Sample usage: "by viewModels (activity)" etc.
    implementation "androidx.navigation:navigation-ui-ktx:2.3.5"

    //noinspection GradleCompatible
    implementation 'com.android.support:recyclerview-v7:29.0.0'
    implementation 'com.github.JakeWharton:ViewPagerIndicator:2.4.1'

    ext.anko_version = '0.10.7'

    implementation "org.jetbrains.anko:anko:$anko_version"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'

    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'


    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:30.1.0')

    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    ///////shimmer
    implementation 'com.facebook.shimmer:shimmer:0.1.0@aar'


    //facebook login
    implementation 'com.facebook.android:facebook-android-sdk:[5,6)'

    implementation 'com.mindorks.android:prdownloader:0.5.0'

    implementation 'com.google.code.gson:gson:2.8.5'

    implementation 'com.github.f0ris.sweetalert:library:1.6.2'

    //chip navigation
    implementation 'com.ismaeldivita.chipnavigation:chip-navigation-bar:1.3.2'

    /// vertical menu
    implementation 'com.github.Yalantis:Context-Menu.Android:1.1.4'


    implementation "androidx.coordinatorlayout:coordinatorlayout:1.1.0"

    implementation 'com.google.android.gms:play-services-maps:18.0.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'com.google.android.libraries.places:places:2.5.0'

    implementation 'com.github.Spikeysanju:MotionToast:1.3.3.4'


    implementation 'com.beust:klaxon:5.5'




    ext.dagger2_version = '2.35.1'
// Basic Dagger 2 (required)
    implementation "com.google.dagger:dagger:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
// dagger.android package (optional)
    implementation "com.google.dagger:dagger-android:$dagger2_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2_version"
// Support library support (optional)
    kapt "com.google.dagger:dagger-android-support:$dagger2_version"

    // Coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1")
    // Coroutines - Retrofit extention
    implementation("com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:1.0.0")
    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion"
//    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
//    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:$junitVersion"


    def mockitoCoreVersion = "3.7.7"
    testImplementation "org.mockito:mockito-core:3.7.7"
    def archCoreTest = "2.1.0"
    testImplementation "androidx.arch.core:core-testing:$archCoreTest"
    def coroutinesTest = "1.3.4"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.1"
    def mockWebserverVersion = "4.7.2"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockWebserverVersion"
    testImplementation "io.mockk:mockk:$mockk"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation 'app.cash.turbine:turbine:0.6.1'


    ///Gif
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.23'


    implementation 'com.github.yshrsmz:keyboardvisibilityevent:3.0.0-RC3'

    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    implementation 'com.github.f0ris.sweetalert:library:1.6.2'
    implementation  'com.github.nkzawa:socket.io-client:0.6.0'
    implementation 'com.google.maps.android:android-maps-utils:0.4+'

    implementation 'com.github.f0ris.sweetalert:library:1.5.6'

    // sdp - ssp
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation 'com.airbnb.android:lottie:4.1.0'

}