# This is a basic workflow to help you get started with Actions
name: CI
on:
  push:
    branches: [ github_actions ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Upload html test report
        uses: actions/upload-artifact@v2
        with:
          name: lint.html
          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Run tests
        run: chmod +x ./gradlew

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: unit_test_report
          path: app/build/reports/tests/testDebugUnitTest/

  instrumentation-test:
    needs: [unit-test]
    runs-on: macos-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Run espresso tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: chmod +x ./gradlew

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected/

  static-code-analysis:
    needs: [instrumentation-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: SonarCloud Scan
        run: chmod +x ./gradlew
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    needs: [static-code-analysis]
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
            - uses: r0adkll/sign-android-release@v1
              name: Sign app APK
              id: sign_app
              with:
                releaseDirectory: app/build/outputs/apk/release
                signingKeyBase64: ${{ secrets.SIGNING_KEY }}
                alias: ${{ secrets.ALIAS }}
                keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
                keyPassword: ${{ secrets.KEY_PASSWORD }}

            - uses: actions/upload-artifact@v2
              with:
                name: Signed app bundle
                path: ${{steps.sign_app.outputs.signedReleaseFile}}